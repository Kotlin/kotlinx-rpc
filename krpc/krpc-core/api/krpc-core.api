public abstract interface class kotlinx/rpc/krpc/KrpcConfig {
	public abstract fun getSerialFormatInitializer ()Lkotlinx/rpc/krpc/serialization/KrpcSerialFormatBuilder;
	public abstract fun getWaitForServices ()Z
}

public final class kotlinx/rpc/krpc/KrpcConfig$Client : kotlinx/rpc/krpc/KrpcConfig {
	public fun getSerialFormatInitializer ()Lkotlinx/rpc/krpc/serialization/KrpcSerialFormatBuilder;
	public fun getWaitForServices ()Z
}

public final class kotlinx/rpc/krpc/KrpcConfig$Server : kotlinx/rpc/krpc/KrpcConfig {
	public fun getSerialFormatInitializer ()Lkotlinx/rpc/krpc/serialization/KrpcSerialFormatBuilder;
	public fun getWaitForServices ()Z
}

public abstract class kotlinx/rpc/krpc/KrpcConfigBuilder {
	public final fun getWaitForServices ()Z
	protected final fun rpcSerialFormat ()Lkotlinx/rpc/krpc/serialization/KrpcSerialFormatBuilder;
	public final fun serialization (Lkotlin/jvm/functions/Function1;)V
	public final fun setWaitForServices (Z)V
}

public final class kotlinx/rpc/krpc/KrpcConfigBuilder$Client : kotlinx/rpc/krpc/KrpcConfigBuilder {
	public fun <init> ()V
	public final fun build ()Lkotlinx/rpc/krpc/KrpcConfig$Client;
}

public final class kotlinx/rpc/krpc/KrpcConfigBuilder$Server : kotlinx/rpc/krpc/KrpcConfigBuilder {
	public fun <init> ()V
	public final fun build ()Lkotlinx/rpc/krpc/KrpcConfig$Server;
}

public final class kotlinx/rpc/krpc/KrpcConfigKt {
	public static final fun rpcClientConfig (Lkotlin/jvm/functions/Function1;)Lkotlinx/rpc/krpc/KrpcConfig$Client;
	public static synthetic fun rpcClientConfig$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/rpc/krpc/KrpcConfig$Client;
	public static final fun rpcServerConfig (Lkotlin/jvm/functions/Function1;)Lkotlinx/rpc/krpc/KrpcConfig$Server;
	public static synthetic fun rpcServerConfig$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/rpc/krpc/KrpcConfig$Server;
}

public abstract interface class kotlinx/rpc/krpc/KrpcTransport : kotlinx/coroutines/CoroutineScope {
	public abstract fun receive (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun send (Lkotlinx/rpc/krpc/KrpcTransportMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class kotlinx/rpc/krpc/KrpcTransportKt {
	public static final fun receiveCatching (Lkotlinx/rpc/krpc/KrpcTransport;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class kotlinx/rpc/krpc/KrpcTransportMessage {
}

public final class kotlinx/rpc/krpc/KrpcTransportMessage$BinaryMessage : kotlinx/rpc/krpc/KrpcTransportMessage {
	public fun <init> ([B)V
	public final fun getValue ()[B
}

public final class kotlinx/rpc/krpc/KrpcTransportMessage$StringMessage : kotlinx/rpc/krpc/KrpcTransportMessage {
	public fun <init> (Ljava/lang/String;)V
	public final fun getValue ()Ljava/lang/String;
}

