<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Copyright 2023-2024 JetBrains s.r.o and contributors. Use of this source code is governed by the Apache 2.0 license.
  -->

<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Transport" id="transport">

    <p>
        Transport layer exists to abstract from the RPC requests logic and focus on delivering and receiving
        encoded RPC messages in kRPC Protocol.
        This layer is represented by the <code>KrpcTransport</code> interface.
        It supports two message formats â€” string and binary,
        and depends on which <a href="configuration.topic" anchor="serialization-dsl">serialization</a> format you
        choose.
    </p>

    <chapter title="Generic transports" id="generic-transports">
        <p>
            Generally, there are no specific guidelines on how RPC should be set up for different transports,
            but structures and APIs used to develop integration with Ktor should outline the common approach.
            You can provide your own transport and even your own fully implemented protocols,
            while the library will take care of code generation.
        </p>
    </chapter>
</topic>
