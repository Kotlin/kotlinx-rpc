public final class org/jetbrains/krpc/transport/ktor/server/KtorServerDslKt {
	public static final fun rpc (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static final fun rpc (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/krpc/transport/ktor/server/RPCKt {
	public static final fun getRPC ()Lio/ktor/server/application/ApplicationPlugin;
}

public final class org/jetbrains/krpc/transport/ktor/server/RPCRoute : io/ktor/server/websocket/DefaultWebSocketServerSession {
	public fun <init> (Lio/ktor/server/websocket/DefaultWebSocketServerSession;)V
	public fun flush (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public fun getCloseReason ()Lkotlinx/coroutines/Deferred;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getExtensions ()Ljava/util/List;
	public fun getIncoming ()Lkotlinx/coroutines/channels/ReceiveChannel;
	public fun getMasking ()Z
	public fun getMaxFrameSize ()J
	public fun getOutgoing ()Lkotlinx/coroutines/channels/SendChannel;
	public fun getPingIntervalMillis ()J
	public fun getTimeoutMillis ()J
	public final fun registerService (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V
	public final fun rpcConfig (Lkotlin/jvm/functions/Function1;)V
	public fun send (Lio/ktor/websocket/Frame;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setMasking (Z)V
	public fun setMaxFrameSize (J)V
	public fun setPingIntervalMillis (J)V
	public fun setTimeoutMillis (J)V
	public fun start (Ljava/util/List;)V
	public fun terminate ()V
}

