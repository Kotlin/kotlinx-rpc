// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, macosArm64, macosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.jetbrains.kotlinx:grpc-core>
open annotation class kotlinx.rpc.grpc.annotations/Grpc : kotlin/Annotation { // kotlinx.rpc.grpc.annotations/Grpc|null[0]
    constructor <init>(kotlin/String = ...) // kotlinx.rpc.grpc.annotations/Grpc.<init>|<init>(kotlin.String){}[0]

    final val protoPackage // kotlinx.rpc.grpc.annotations/Grpc.protoPackage|{}protoPackage[0]
        final fun <get-protoPackage>(): kotlin/String // kotlinx.rpc.grpc.annotations/Grpc.protoPackage.<get-protoPackage>|<get-protoPackage>(){}[0]

    open annotation class Method : kotlin/Annotation { // kotlinx.rpc.grpc.annotations/Grpc.Method|null[0]
        constructor <init>(kotlin/String = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ...) // kotlinx.rpc.grpc.annotations/Grpc.Method.<init>|<init>(kotlin.String;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean){}[0]

        final val idempotent // kotlinx.rpc.grpc.annotations/Grpc.Method.idempotent|{}idempotent[0]
            final fun <get-idempotent>(): kotlin/Boolean // kotlinx.rpc.grpc.annotations/Grpc.Method.idempotent.<get-idempotent>|<get-idempotent>(){}[0]
        final val name // kotlinx.rpc.grpc.annotations/Grpc.Method.name|{}name[0]
            final fun <get-name>(): kotlin/String // kotlinx.rpc.grpc.annotations/Grpc.Method.name.<get-name>|<get-name>(){}[0]
        final val safe // kotlinx.rpc.grpc.annotations/Grpc.Method.safe|{}safe[0]
            final fun <get-safe>(): kotlin/Boolean // kotlinx.rpc.grpc.annotations/Grpc.Method.safe.<get-safe>|<get-safe>(){}[0]
        final val sampledToLocalTracing // kotlinx.rpc.grpc.annotations/Grpc.Method.sampledToLocalTracing|{}sampledToLocalTracing[0]
            final fun <get-sampledToLocalTracing>(): kotlin/Boolean // kotlinx.rpc.grpc.annotations/Grpc.Method.sampledToLocalTracing.<get-sampledToLocalTracing>|<get-sampledToLocalTracing>(){}[0]
    }
}

final enum class kotlinx.rpc.grpc.descriptor/MethodType : kotlin/Enum<kotlinx.rpc.grpc.descriptor/MethodType> { // kotlinx.rpc.grpc.descriptor/MethodType|null[0]
    enum entry BIDI_STREAMING // kotlinx.rpc.grpc.descriptor/MethodType.BIDI_STREAMING|null[0]
    enum entry CLIENT_STREAMING // kotlinx.rpc.grpc.descriptor/MethodType.CLIENT_STREAMING|null[0]
    enum entry SERVER_STREAMING // kotlinx.rpc.grpc.descriptor/MethodType.SERVER_STREAMING|null[0]
    enum entry UNARY // kotlinx.rpc.grpc.descriptor/MethodType.UNARY|null[0]
    enum entry UNKNOWN // kotlinx.rpc.grpc.descriptor/MethodType.UNKNOWN|null[0]

    final val entries // kotlinx.rpc.grpc.descriptor/MethodType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<kotlinx.rpc.grpc.descriptor/MethodType> // kotlinx.rpc.grpc.descriptor/MethodType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): kotlinx.rpc.grpc.descriptor/MethodType // kotlinx.rpc.grpc.descriptor/MethodType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<kotlinx.rpc.grpc.descriptor/MethodType> // kotlinx.rpc.grpc.descriptor/MethodType.values|values#static(){}[0]
}

final enum class kotlinx.rpc.grpc/StatusCode : kotlin/Enum<kotlinx.rpc.grpc/StatusCode> { // kotlinx.rpc.grpc/StatusCode|null[0]
    enum entry ABORTED // kotlinx.rpc.grpc/StatusCode.ABORTED|null[0]
    enum entry ALREADY_EXISTS // kotlinx.rpc.grpc/StatusCode.ALREADY_EXISTS|null[0]
    enum entry CANCELLED // kotlinx.rpc.grpc/StatusCode.CANCELLED|null[0]
    enum entry DATA_LOSS // kotlinx.rpc.grpc/StatusCode.DATA_LOSS|null[0]
    enum entry DEADLINE_EXCEEDED // kotlinx.rpc.grpc/StatusCode.DEADLINE_EXCEEDED|null[0]
    enum entry FAILED_PRECONDITION // kotlinx.rpc.grpc/StatusCode.FAILED_PRECONDITION|null[0]
    enum entry INTERNAL // kotlinx.rpc.grpc/StatusCode.INTERNAL|null[0]
    enum entry INVALID_ARGUMENT // kotlinx.rpc.grpc/StatusCode.INVALID_ARGUMENT|null[0]
    enum entry NOT_FOUND // kotlinx.rpc.grpc/StatusCode.NOT_FOUND|null[0]
    enum entry OK // kotlinx.rpc.grpc/StatusCode.OK|null[0]
    enum entry OUT_OF_RANGE // kotlinx.rpc.grpc/StatusCode.OUT_OF_RANGE|null[0]
    enum entry PERMISSION_DENIED // kotlinx.rpc.grpc/StatusCode.PERMISSION_DENIED|null[0]
    enum entry RESOURCE_EXHAUSTED // kotlinx.rpc.grpc/StatusCode.RESOURCE_EXHAUSTED|null[0]
    enum entry UNAUTHENTICATED // kotlinx.rpc.grpc/StatusCode.UNAUTHENTICATED|null[0]
    enum entry UNAVAILABLE // kotlinx.rpc.grpc/StatusCode.UNAVAILABLE|null[0]
    enum entry UNIMPLEMENTED // kotlinx.rpc.grpc/StatusCode.UNIMPLEMENTED|null[0]
    enum entry UNKNOWN // kotlinx.rpc.grpc/StatusCode.UNKNOWN|null[0]

    final val entries // kotlinx.rpc.grpc/StatusCode.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<kotlinx.rpc.grpc/StatusCode> // kotlinx.rpc.grpc/StatusCode.entries.<get-entries>|<get-entries>#static(){}[0]
    final val value // kotlinx.rpc.grpc/StatusCode.value|{}value[0]
        final fun <get-value>(): kotlin/Int // kotlinx.rpc.grpc/StatusCode.value.<get-value>|<get-value>(){}[0]
    final val valueAscii // kotlinx.rpc.grpc/StatusCode.valueAscii|{}valueAscii[0]
        final fun <get-valueAscii>(): kotlin/ByteArray // kotlinx.rpc.grpc/StatusCode.valueAscii.<get-valueAscii>|<get-valueAscii>(){}[0]

    final fun valueOf(kotlin/String): kotlinx.rpc.grpc/StatusCode // kotlinx.rpc.grpc/StatusCode.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<kotlinx.rpc.grpc/StatusCode> // kotlinx.rpc.grpc/StatusCode.values|values#static(){}[0]
}

final class <#A: kotlin/Any?, #B: kotlin/Any?> kotlinx.rpc.grpc.descriptor/MethodDescriptor { // kotlinx.rpc.grpc.descriptor/MethodDescriptor|null[0]
    final fun getFullMethodName(): kotlin/String // kotlinx.rpc.grpc.descriptor/MethodDescriptor.getFullMethodName|getFullMethodName(){}[0]
    final fun getRequestMarshaller(): kotlinx.rpc.grpc.descriptor/MethodDescriptor.Marshaller<#A> // kotlinx.rpc.grpc.descriptor/MethodDescriptor.getRequestMarshaller|getRequestMarshaller(){}[0]
    final fun getResponseMarshaller(): kotlinx.rpc.grpc.descriptor/MethodDescriptor.Marshaller<#B> // kotlinx.rpc.grpc.descriptor/MethodDescriptor.getResponseMarshaller|getResponseMarshaller(){}[0]
    final fun getSchemaDescriptor(): kotlin/Any? // kotlinx.rpc.grpc.descriptor/MethodDescriptor.getSchemaDescriptor|getSchemaDescriptor(){}[0]
    final fun getServiceName(): kotlin/String? // kotlinx.rpc.grpc.descriptor/MethodDescriptor.getServiceName|getServiceName(){}[0]
    final fun isIdempotent(): kotlin/Boolean // kotlinx.rpc.grpc.descriptor/MethodDescriptor.isIdempotent|isIdempotent(){}[0]
    final fun isSafe(): kotlin/Boolean // kotlinx.rpc.grpc.descriptor/MethodDescriptor.isSafe|isSafe(){}[0]
    final fun isSampledToLocalTracing(): kotlin/Boolean // kotlinx.rpc.grpc.descriptor/MethodDescriptor.isSampledToLocalTracing|isSampledToLocalTracing(){}[0]

    abstract interface <#A1: kotlin/Any?> Marshaller { // kotlinx.rpc.grpc.descriptor/MethodDescriptor.Marshaller|null[0]
        abstract fun parse(kotlinx.rpc.protobuf.input.stream/BufferInputStream): #A1 // kotlinx.rpc.grpc.descriptor/MethodDescriptor.Marshaller.parse|parse(kotlinx.rpc.protobuf.input.stream.BufferInputStream){}[0]
        abstract fun stream(#A1): kotlinx.rpc.protobuf.input.stream/BufferInputStream // kotlinx.rpc.grpc.descriptor/MethodDescriptor.Marshaller.stream|stream(1:0){}[0]
    }

    final object Companion { // kotlinx.rpc.grpc.descriptor/MethodDescriptor.Companion|null[0]
        final fun extractFullServiceName(kotlin/String): kotlin/String? // kotlinx.rpc.grpc.descriptor/MethodDescriptor.Companion.extractFullServiceName|extractFullServiceName(kotlin.String){}[0]
    }
}

final class kotlinx.rpc.grpc/GrpcMetadata { // kotlinx.rpc.grpc/GrpcMetadata|null[0]
    constructor <init>() // kotlinx.rpc.grpc/GrpcMetadata.<init>|<init>(){}[0]

    final fun merge(kotlinx.rpc.grpc/GrpcMetadata) // kotlinx.rpc.grpc/GrpcMetadata.merge|merge(kotlinx.rpc.grpc.GrpcMetadata){}[0]
}

final class kotlinx.rpc.grpc/Status { // kotlinx.rpc.grpc/Status|null[0]
    final fun getCause(): kotlin/Throwable? // kotlinx.rpc.grpc/Status.getCause|getCause(){}[0]
    final fun getDescription(): kotlin/String? // kotlinx.rpc.grpc/Status.getDescription|getDescription(){}[0]
    final fun toString(): kotlin/String // kotlinx.rpc.grpc/Status.toString|toString(){}[0]
}

final class kotlinx.rpc.grpc/StatusException : kotlin/Exception { // kotlinx.rpc.grpc/StatusException|null[0]
    constructor <init>(kotlinx.rpc.grpc/Status) // kotlinx.rpc.grpc/StatusException.<init>|<init>(kotlinx.rpc.grpc.Status){}[0]
    constructor <init>(kotlinx.rpc.grpc/Status, kotlinx.rpc.grpc/GrpcMetadata?) // kotlinx.rpc.grpc/StatusException.<init>|<init>(kotlinx.rpc.grpc.Status;kotlinx.rpc.grpc.GrpcMetadata?){}[0]

    final fun getStatus(): kotlinx.rpc.grpc/Status // kotlinx.rpc.grpc/StatusException.getStatus|getStatus(){}[0]
    final fun getTrailers(): kotlinx.rpc.grpc/GrpcMetadata? // kotlinx.rpc.grpc/StatusException.getTrailers|getTrailers(){}[0]
}

final class kotlinx.rpc.grpc/StatusRuntimeException : kotlin/RuntimeException { // kotlinx.rpc.grpc/StatusRuntimeException|null[0]
    constructor <init>(kotlinx.rpc.grpc/Status) // kotlinx.rpc.grpc/StatusRuntimeException.<init>|<init>(kotlinx.rpc.grpc.Status){}[0]
    constructor <init>(kotlinx.rpc.grpc/Status, kotlinx.rpc.grpc/GrpcMetadata?) // kotlinx.rpc.grpc/StatusRuntimeException.<init>|<init>(kotlinx.rpc.grpc.Status;kotlinx.rpc.grpc.GrpcMetadata?){}[0]

    final fun getStatus(): kotlinx.rpc.grpc/Status // kotlinx.rpc.grpc/StatusRuntimeException.getStatus|getStatus(){}[0]
    final fun getTrailers(): kotlinx.rpc.grpc/GrpcMetadata? // kotlinx.rpc.grpc/StatusRuntimeException.getTrailers|getTrailers(){}[0]
}

final val kotlinx.rpc.grpc.descriptor/methodType // kotlinx.rpc.grpc.descriptor/methodType|@kotlinx.rpc.grpc.descriptor.MethodDescriptor<*,*>{}methodType[0]
    final fun (kotlinx.rpc.grpc.descriptor/MethodDescriptor<*, *>).<get-methodType>(): kotlinx.rpc.grpc.descriptor/MethodType // kotlinx.rpc.grpc.descriptor/methodType.<get-methodType>|<get-methodType>@kotlinx.rpc.grpc.descriptor.MethodDescriptor<*,*>(){}[0]
final val kotlinx.rpc.grpc/statusCode // kotlinx.rpc.grpc/statusCode|@kotlinx.rpc.grpc.Status{}statusCode[0]
    final fun (kotlinx.rpc.grpc/Status).<get-statusCode>(): kotlinx.rpc.grpc/StatusCode // kotlinx.rpc.grpc/statusCode.<get-statusCode>|<get-statusCode>@kotlinx.rpc.grpc.Status(){}[0]

final fun kotlinx.rpc.grpc/Status(kotlinx.rpc.grpc/StatusCode, kotlin/String? = ..., kotlin/Throwable? = ...): kotlinx.rpc.grpc/Status // kotlinx.rpc.grpc/Status|Status(kotlinx.rpc.grpc.StatusCode;kotlin.String?;kotlin.Throwable?){}[0]
