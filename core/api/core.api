public abstract interface class kotlinx/rpc/RPC : kotlinx/coroutines/CoroutineScope {
}

public final class kotlinx/rpc/RPCCall {
	public fun <init> (Ljava/lang/String;JLjava/lang/String;Lkotlinx/rpc/RPCCall$Type;Ljava/lang/Object;Lkotlin/reflect/KType;Lkotlin/reflect/KType;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()J
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lkotlinx/rpc/RPCCall$Type;
	public final fun component5 ()Ljava/lang/Object;
	public final fun component6 ()Lkotlin/reflect/KType;
	public final fun component7 ()Lkotlin/reflect/KType;
	public final fun copy (Ljava/lang/String;JLjava/lang/String;Lkotlinx/rpc/RPCCall$Type;Ljava/lang/Object;Lkotlin/reflect/KType;Lkotlin/reflect/KType;)Lkotlinx/rpc/RPCCall;
	public static synthetic fun copy$default (Lkotlinx/rpc/RPCCall;Ljava/lang/String;JLjava/lang/String;Lkotlinx/rpc/RPCCall$Type;Ljava/lang/Object;Lkotlin/reflect/KType;Lkotlin/reflect/KType;ILjava/lang/Object;)Lkotlinx/rpc/RPCCall;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCallableName ()Ljava/lang/String;
	public final fun getData ()Ljava/lang/Object;
	public final fun getDataType ()Lkotlin/reflect/KType;
	public final fun getReturnType ()Lkotlin/reflect/KType;
	public final fun getServiceId ()J
	public final fun getServiceTypeString ()Ljava/lang/String;
	public final fun getType ()Lkotlinx/rpc/RPCCall$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class kotlinx/rpc/RPCCall$Type : java/lang/Enum {
	public static final field Field Lkotlinx/rpc/RPCCall$Type;
	public static final field Method Lkotlinx/rpc/RPCCall$Type;
	public static fun valueOf (Ljava/lang/String;)Lkotlinx/rpc/RPCCall$Type;
	public static fun values ()[Lkotlinx/rpc/RPCCall$Type;
}

public abstract interface class kotlinx/rpc/RPCClient : kotlinx/coroutines/CoroutineScope {
	public abstract fun call (Lkotlinx/rpc/RPCCall;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun provideStubContext (J)Lkotlin/coroutines/CoroutineContext;
	public abstract fun registerPlainFlowField (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/rpc/RPCField;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun registerSharedFlowField (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/rpc/RPCField;)Lkotlinx/coroutines/flow/SharedFlow;
	public abstract fun registerStateFlowField (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/rpc/RPCField;)Lkotlinx/coroutines/flow/StateFlow;
}

public abstract interface class kotlinx/rpc/RPCConfig {
	public abstract fun getSerialFormatInitializer ()Lkotlinx/rpc/serialization/RPCSerialFormatBuilder;
	public abstract fun getSharedFlowBuilder ()Lkotlin/jvm/functions/Function0;
	public abstract fun getWaitForServices ()Z
}

public final class kotlinx/rpc/RPCConfig$Client : kotlinx/rpc/RPCConfig {
	public fun getSerialFormatInitializer ()Lkotlinx/rpc/serialization/RPCSerialFormatBuilder;
	public fun getSharedFlowBuilder ()Lkotlin/jvm/functions/Function0;
	public fun getWaitForServices ()Z
}

public final class kotlinx/rpc/RPCConfig$Server : kotlinx/rpc/RPCConfig {
	public fun getSerialFormatInitializer ()Lkotlinx/rpc/serialization/RPCSerialFormatBuilder;
	public fun getSharedFlowBuilder ()Lkotlin/jvm/functions/Function0;
	public fun getWaitForServices ()Z
}

public abstract class kotlinx/rpc/RPCConfigBuilder {
	protected final fun getSharedFlowBuilder ()Lkotlin/jvm/functions/Function0;
	public final fun getWaitForServices ()Z
	protected final fun rpcSerialFormat ()Lkotlinx/rpc/serialization/RPCSerialFormatBuilder;
	public final fun serialization (Lkotlin/jvm/functions/Function1;)V
	protected final fun setSharedFlowBuilder (Lkotlin/jvm/functions/Function0;)V
	public final fun setWaitForServices (Z)V
	public final fun sharedFlowParameters (Lkotlin/jvm/functions/Function1;)V
}

public final class kotlinx/rpc/RPCConfigBuilder$Client : kotlinx/rpc/RPCConfigBuilder {
	public fun <init> ()V
	public final fun build ()Lkotlinx/rpc/RPCConfig$Client;
}

public final class kotlinx/rpc/RPCConfigBuilder$Server : kotlinx/rpc/RPCConfigBuilder {
	public fun <init> ()V
	public final fun build ()Lkotlinx/rpc/RPCConfig$Server;
}

public final class kotlinx/rpc/RPCConfigBuilder$SharedFlowParametersBuilder {
	public static final field DEFAULT_EXTRA_BUFFER_CAPACITY I
	public static final field DEFAULT_REPLAY I
	public final fun getExtraBufferCapacity ()I
	public final fun getOnBufferOverflow ()Lkotlinx/coroutines/channels/BufferOverflow;
	public final fun getReplay ()I
	public final fun setExtraBufferCapacity (I)V
	public final fun setOnBufferOverflow (Lkotlinx/coroutines/channels/BufferOverflow;)V
	public final fun setReplay (I)V
}

public final class kotlinx/rpc/RPCConfigKt {
	public static final fun rpcClientConfig (Lkotlin/jvm/functions/Function1;)Lkotlinx/rpc/RPCConfig$Client;
	public static synthetic fun rpcClientConfig$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/rpc/RPCConfig$Client;
	public static final fun rpcServerConfig (Lkotlin/jvm/functions/Function1;)Lkotlinx/rpc/RPCConfig$Server;
	public static synthetic fun rpcServerConfig$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/rpc/RPCConfig$Server;
}

public abstract interface annotation class kotlinx/rpc/RPCEagerField : java/lang/annotation/Annotation {
}

public final class kotlinx/rpc/RPCField {
	public fun <init> (Ljava/lang/String;JLjava/lang/String;Lkotlin/reflect/KType;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()J
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lkotlin/reflect/KType;
	public final fun copy (Ljava/lang/String;JLjava/lang/String;Lkotlin/reflect/KType;)Lkotlinx/rpc/RPCField;
	public static synthetic fun copy$default (Lkotlinx/rpc/RPCField;Ljava/lang/String;JLjava/lang/String;Lkotlin/reflect/KType;ILjava/lang/Object;)Lkotlinx/rpc/RPCField;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getServiceId ()J
	public final fun getServiceTypeString ()Ljava/lang/String;
	public final fun getType ()Lkotlin/reflect/KType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class kotlinx/rpc/RPCServer : kotlinx/coroutines/CoroutineScope {
	public abstract fun registerService (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class kotlinx/rpc/RPCTransport : kotlinx/coroutines/CoroutineScope {
	public abstract fun receive (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun receiveCatching-IoAF18A (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun send (Lkotlinx/rpc/RPCTransportMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class kotlinx/rpc/RPCTransport$DefaultImpls {
	public static fun receiveCatching-IoAF18A (Lkotlinx/rpc/RPCTransport;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class kotlinx/rpc/RPCTransportMessage {
}

public final class kotlinx/rpc/RPCTransportMessage$BinaryMessage : kotlinx/rpc/RPCTransportMessage {
	public fun <init> ([B)V
	public final fun getValue ()[B
}

public final class kotlinx/rpc/RPCTransportMessage$StringMessage : kotlinx/rpc/RPCTransportMessage {
	public fun <init> (Ljava/lang/String;)V
	public final fun getValue ()Ljava/lang/String;
}

public final class kotlinx/rpc/StreamScopeKt {
	public static final fun invokeOnStreamScopeCompletion (ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun invokeOnStreamScopeCompletion$default (ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun streamScoped (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

