public abstract interface class kotlinx/rpc/RemoteService {
}

public final class kotlinx/rpc/RpcCall {
	public fun <init> (Lkotlinx/rpc/descriptor/RpcServiceDescriptor;Ljava/lang/String;[Ljava/lang/Object;J)V
	public final fun getCallableName ()Ljava/lang/String;
	public final fun getDescriptor ()Lkotlinx/rpc/descriptor/RpcServiceDescriptor;
	public final fun getParameters ()[Ljava/lang/Object;
	public final fun getServiceId ()J
}

public abstract interface class kotlinx/rpc/RpcClient {
	public abstract fun call (Lkotlinx/rpc/RpcCall;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun callServerStreaming (Lkotlinx/rpc/RpcCall;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class kotlinx/rpc/RpcServer {
	public abstract fun deregisterService (Lkotlin/reflect/KClass;)V
	public abstract fun registerService (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function0;)V
}

public final class kotlinx/rpc/WithServiceKt {
	public static final fun withService (Lkotlinx/rpc/RpcClient;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public static final fun withService (Lkotlinx/rpc/RpcClient;Lkotlin/reflect/KType;)Ljava/lang/Object;
}

public abstract interface annotation class kotlinx/rpc/annotations/CheckedTypeAnnotation : java/lang/annotation/Annotation {
}

public abstract interface annotation class kotlinx/rpc/annotations/Rpc : java/lang/annotation/Annotation {
}

public abstract interface class kotlinx/rpc/descriptor/RpcCallable {
	public abstract fun getInvokator ()Lkotlinx/rpc/descriptor/RpcInvokator;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getParameters ()[Lkotlinx/rpc/descriptor/RpcParameter;
	public abstract fun getReturnType ()Lkotlinx/rpc/descriptor/RpcType;
	public abstract fun isNonSuspendFunction ()Z
}

public abstract interface class kotlinx/rpc/descriptor/RpcInvokator {
}

public abstract interface class kotlinx/rpc/descriptor/RpcInvokator$Method : kotlinx/rpc/descriptor/RpcInvokator {
	public abstract fun call (Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class kotlinx/rpc/descriptor/RpcParameter {
	public abstract fun getAnnotations ()Ljava/util/List;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getType ()Lkotlinx/rpc/descriptor/RpcType;
	public abstract fun isOptional ()Z
}

public abstract interface class kotlinx/rpc/descriptor/RpcServiceDescriptor {
	public abstract fun createInstance (JLkotlinx/rpc/RpcClient;)Ljava/lang/Object;
	public abstract fun getCallable (Ljava/lang/String;)Lkotlinx/rpc/descriptor/RpcCallable;
	public abstract fun getCallables ()Ljava/util/Map;
	public abstract fun getFqName ()Ljava/lang/String;
}

public final class kotlinx/rpc/descriptor/RpcServiceDescriptorKt {
	public static final fun serviceDescriptorOf (Lkotlin/reflect/KClass;)Lkotlinx/rpc/descriptor/RpcServiceDescriptor;
	public static final fun serviceDescriptorOf (Lkotlin/reflect/KType;)Lkotlinx/rpc/descriptor/RpcServiceDescriptor;
}

public abstract interface class kotlinx/rpc/descriptor/RpcType {
	public abstract fun getAnnotations ()Ljava/util/List;
	public abstract fun getKType ()Lkotlin/reflect/KType;
}

