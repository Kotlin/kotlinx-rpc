FILE: module_main_grpc.kt
    @R|kotlinx/rpc/grpc/annotations/Grpc|() public abstract interface MyService : R|kotlin/Any| {
        public abstract suspend fun unary(value: R|kotlin/String|): R|kotlin/String|

        public abstract suspend fun clientStreaming(flow: R|kotlinx/coroutines/flow/Flow<kotlin/String>|): R|kotlin/String|

        public abstract fun serverStreaming(value: R|kotlin/String|): R|kotlinx/coroutines/flow/Flow<kotlin/String>|

        public abstract fun bidiStreaming(flow: R|kotlinx/coroutines/flow/Flow<kotlin/String>|): R|kotlinx/coroutines/flow/Flow<kotlin/String>|

        public abstract suspend fun zeroValues(): R|kotlin/Unit|

        public abstract fun checkRegularDiagnosticsWork(): R|kotlin/Unit|

        public abstract suspend fun multipleParams(param1: R|kotlin/String|, param2: R|kotlin/String|): R|kotlin/Unit|

        public abstract suspend fun nullable(param1: R|kotlin/String?|): R|kotlin/String?|

        public abstract suspend fun innerFlow(withFlow: R|WithFlow|): R|kotlin/Unit|

        public final class $rpcServiceStub : R|kotlin/Any| {
            public final companion object Companion : R|kotlin/Any| {
            }

        }

    }
    public final class WithFlow : R|kotlin/Any| {
        public constructor(flow: R|kotlinx/coroutines/flow/Flow<kotlin/String>|): R|WithFlow| {
            super<R|kotlin/Any|>()
        }

        public final val flow: R|kotlinx/coroutines/flow/Flow<kotlin/String>| = R|<local>/flow|
            public get(): R|kotlinx/coroutines/flow/Flow<kotlin/String>|

    }
    @R|kotlinx/rpc/grpc/annotations/Grpc|(protoPackage = String(-invalid name)) public abstract interface WrongAnnotations1 : R|kotlin/Any| {
        public final class $rpcServiceStub : R|kotlin/Any| {
            public final companion object Companion : R|kotlin/Any| {
            }

        }

    }
    @R|kotlinx/rpc/grpc/annotations/Grpc|(protoPackage = String(-invalid name)) public abstract interface WrongAnnotations2 : R|kotlin/Any| {
        public final class $rpcServiceStub : R|kotlin/Any| {
            public final companion object Companion : R|kotlin/Any| {
            }

        }

    }
    @R|kotlinx/rpc/grpc/annotations/Grpc|(protoPackage = <strcat>(String(invalid.name), String( ))) public abstract interface WrongAnnotations3 : R|kotlin/Any| {
        public final class $rpcServiceStub : R|kotlin/Any| {
            public final companion object Companion : R|kotlin/Any| {
            }

        }

    }
    @R|kotlinx/rpc/grpc/annotations/Grpc|() public abstract interface WrongAnnotations4 : R|kotlin/Any| {
        @R|kotlinx/rpc/grpc/annotations/Grpc.Method|(name = String(wrongName+1)) public abstract suspend fun wrongName1(): R|kotlin/Unit|

        @R|kotlinx/rpc/grpc/annotations/Grpc.Method|(name = String(wrongName+2)) public abstract suspend fun wrongName2(): R|kotlin/Unit|

        @R|kotlinx/rpc/grpc/annotations/Grpc.Method|(name = <strcat>(String(wrongName), String(+3))) public abstract suspend fun wrongName3(): R|kotlin/Unit|

        @R|kotlinx/rpc/grpc/annotations/Grpc.Method|(safe = Boolean(true), idempotent = Boolean(false)) public abstract suspend fun wrongSafeIdempotent1(): R|kotlin/Unit|

        @R|kotlinx/rpc/grpc/annotations/Grpc.Method|(safe = Boolean(true)) public abstract suspend fun wrongSafeIdempotent2(): R|kotlin/Unit|

        public final class $rpcServiceStub : R|kotlin/Any| {
            public final companion object Companion : R|kotlin/Any| {
            }

        }

    }
