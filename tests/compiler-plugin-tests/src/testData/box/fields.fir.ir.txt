FILE fqName:<root> fileName:/fields.kt
  CLASS INTERFACE name:BoxService modality:ABSTRACT visibility:public superTypes:[kotlinx.rpc.RemoteService]
    annotations:
      Rpc
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.BoxService
    CLASS GENERATED[kotlinx.rpc.codegen.RPCGeneratedStubKey] CLASS name:$rpcServiceStub modality:FINAL visibility:public superTypes:[<root>.BoxService]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.BoxService.$rpcServiceStub
      PROPERTY name:__rpc_stub_id visibility:private modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:__rpc_stub_id type:kotlin.Long visibility:private [final]
          EXPRESSION_BODY
            GET_VAR '__rpc_stub_id: kotlin.Long declared in <root>.BoxService.$rpcServiceStub.<init>' type=kotlin.Long origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-__rpc_stub_id> visibility:private modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub) returnType:kotlin.Long
          correspondingProperty: PROPERTY name:__rpc_stub_id visibility:private modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='private final fun <get-__rpc_stub_id> (): kotlin.Long declared in <root>.BoxService.$rpcServiceStub'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:__rpc_stub_id type:kotlin.Long visibility:private [final]' type=kotlin.Long origin=null
                receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub.<get-__rpc_stub_id>' type=<root>.BoxService.$rpcServiceStub origin=null
      PROPERTY name:__rpc_client visibility:private modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:__rpc_client type:kotlinx.rpc.RpcClient visibility:private [final]
          EXPRESSION_BODY
            GET_VAR '__rpc_client: kotlinx.rpc.RpcClient declared in <root>.BoxService.$rpcServiceStub.<init>' type=kotlinx.rpc.RpcClient origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-__rpc_client> visibility:private modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub) returnType:kotlinx.rpc.RpcClient
          correspondingProperty: PROPERTY name:__rpc_client visibility:private modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='private final fun <get-__rpc_client> (): kotlinx.rpc.RpcClient declared in <root>.BoxService.$rpcServiceStub'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:__rpc_client type:kotlinx.rpc.RpcClient visibility:private [final]' type=kotlinx.rpc.RpcClient origin=null
                receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub.<get-__rpc_client>' type=<root>.BoxService.$rpcServiceStub origin=null
      PROPERTY name:coroutineContext visibility:public modality:FINAL [val]
        overridden:
          public abstract coroutineContext: kotlin.coroutines.CoroutineContext declared in kotlinx.rpc.RpcClient
        FIELD PROPERTY_BACKING_FIELD name:coroutineContext type:kotlin.coroutines.CoroutineContext visibility:private [final]
          EXPRESSION_BODY
            CALL 'public abstract fun provideStubContext (serviceId: kotlin.Long): kotlin.coroutines.CoroutineContext declared in kotlinx.rpc.RpcClient' type=kotlin.coroutines.CoroutineContext origin=null
              $this: CALL 'private final fun <get-__rpc_client> (): kotlinx.rpc.RpcClient declared in <root>.BoxService.$rpcServiceStub' type=kotlinx.rpc.RpcClient origin=GET_PROPERTY
                $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=<root>.BoxService.$rpcServiceStub origin=null
              serviceId: CALL 'private final fun <get-__rpc_stub_id> (): kotlin.Long declared in <root>.BoxService.$rpcServiceStub' type=kotlin.Long origin=GET_PROPERTY
                $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=<root>.BoxService.$rpcServiceStub origin=null
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-coroutineContext> visibility:public modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub) returnType:kotlin.coroutines.CoroutineContext
          correspondingProperty: PROPERTY name:coroutineContext visibility:public modality:FINAL [val]
          overridden:
            public abstract fun <get-coroutineContext> (): kotlin.coroutines.CoroutineContext declared in <root>.BoxService
          $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-coroutineContext> (): kotlin.coroutines.CoroutineContext declared in <root>.BoxService.$rpcServiceStub'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:coroutineContext type:kotlin.coroutines.CoroutineContext visibility:private [final]' type=kotlin.coroutines.CoroutineContext origin=null
                receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub.<get-coroutineContext>' type=<root>.BoxService.$rpcServiceStub origin=null
      PROPERTY name:plainFlow visibility:public modality:FINAL [delegated,val]
        overridden:
          public abstract plainFlow: kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.BoxService
        FIELD PROPERTY_DELEGATE name:plainFlow$delegate type:kotlin.Lazy<kotlinx.coroutines.flow.Flow<kotlin.String>> visibility:private [final]
          EXPRESSION_BODY
            CALL 'public final fun lazy <T> (initializer: kotlin.Function0<T of kotlin.lazy>): kotlin.Lazy<T of kotlin.lazy> declared in kotlin' type=kotlin.Lazy<kotlinx.coroutines.flow.Flow<kotlin.String>> origin=null
              <T>: kotlinx.coroutines.flow.Flow<kotlin.String>
              initializer: FUN_EXPR type=kotlin.Function0<kotlinx.coroutines.flow.Flow<kotlin.String>> origin=LAMBDA
                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from='local final fun <anonymous> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub.plainFlow$delegate'
                      CALL 'public final fun registerPlainFlowField <T> (serviceScope: kotlinx.coroutines.CoroutineScope, descriptor: kotlinx.rpc.descriptor.RpcServiceDescriptor<*>, fieldName: kotlin.String, serviceId: kotlin.Long): kotlinx.coroutines.flow.Flow<T of kotlinx.rpc.registerPlainFlowField> declared in kotlinx.rpc' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
                        <T>: kotlin.String
                        $receiver: CALL 'private final fun <get-__rpc_client> (): kotlinx.rpc.RpcClient declared in <root>.BoxService.$rpcServiceStub' type=kotlinx.rpc.RpcClient origin=GET_PROPERTY
                          $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=<root>.BoxService.$rpcServiceStub origin=null
                        serviceScope: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=kotlinx.coroutines.CoroutineScope origin=null
                        descriptor: GET_OBJECT 'CLASS GENERATED[kotlinx.rpc.codegen.FirRpcServiceStubCompanionObject] OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlinx.rpc.descriptor.RpcServiceDescriptor<<root>.BoxService>]' type=<root>.BoxService.$rpcServiceStub.Companion
                        fieldName: CONST String type=kotlin.String value="plainFlow"
                        serviceId: CALL 'private final fun <get-__rpc_stub_id> (): kotlin.Long declared in <root>.BoxService.$rpcServiceStub' type=kotlin.Long origin=GET_PROPERTY
                          $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=<root>.BoxService.$rpcServiceStub origin=null
        FUN DELEGATED_PROPERTY_ACCESSOR name:<get-plainFlow> visibility:public modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub) returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
          correspondingProperty: PROPERTY name:plainFlow visibility:public modality:FINAL [delegated,val]
          overridden:
            public abstract fun <get-plainFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.BoxService
          $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-plainFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub'
              CALL 'public final fun getValue <T> (thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T of kotlin.getValue declared in kotlin' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
                <T>: kotlinx.coroutines.flow.Flow<kotlin.String>
                $receiver: GET_FIELD 'FIELD PROPERTY_DELEGATE name:plainFlow$delegate type:kotlin.Lazy<kotlinx.coroutines.flow.Flow<kotlin.String>> visibility:private [final] declared in <root>.BoxService.$rpcServiceStub' type=kotlin.Lazy<kotlinx.coroutines.flow.Flow<kotlin.String>> origin=null
                  receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub.<get-plainFlow>' type=<root>.BoxService.$rpcServiceStub origin=null
                thisRef: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub.<get-plainFlow>' type=<root>.BoxService.$rpcServiceStub origin=null
                property: PROPERTY_REFERENCE 'public final plainFlow: kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub' field=null getter='public final fun <get-plainFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub' setter=null type=kotlin.reflect.KProperty1<<root>.BoxService.$rpcServiceStub, kotlinx.coroutines.flow.Flow<kotlin.String>> origin=PROPERTY_REFERENCE_FOR_DELEGATE
      PROPERTY name:sharedFlow visibility:public modality:FINAL [delegated,val]
        overridden:
          public abstract sharedFlow: kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.BoxService
        FIELD PROPERTY_DELEGATE name:sharedFlow$delegate type:kotlin.Lazy<kotlinx.coroutines.flow.SharedFlow<kotlin.String>> visibility:private [final]
          EXPRESSION_BODY
            CALL 'public final fun lazy <T> (initializer: kotlin.Function0<T of kotlin.lazy>): kotlin.Lazy<T of kotlin.lazy> declared in kotlin' type=kotlin.Lazy<kotlinx.coroutines.flow.SharedFlow<kotlin.String>> origin=null
              <T>: kotlinx.coroutines.flow.SharedFlow<kotlin.String>
              initializer: FUN_EXPR type=kotlin.Function0<kotlinx.coroutines.flow.SharedFlow<kotlin.String>> origin=LAMBDA
                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String>
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from='local final fun <anonymous> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub.sharedFlow$delegate'
                      CALL 'public final fun registerSharedFlowField <T> (serviceScope: kotlinx.coroutines.CoroutineScope, descriptor: kotlinx.rpc.descriptor.RpcServiceDescriptor<*>, fieldName: kotlin.String, serviceId: kotlin.Long): kotlinx.coroutines.flow.SharedFlow<T of kotlinx.rpc.registerSharedFlowField> declared in kotlinx.rpc' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
                        <T>: kotlin.String
                        $receiver: CALL 'private final fun <get-__rpc_client> (): kotlinx.rpc.RpcClient declared in <root>.BoxService.$rpcServiceStub' type=kotlinx.rpc.RpcClient origin=GET_PROPERTY
                          $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=<root>.BoxService.$rpcServiceStub origin=null
                        serviceScope: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=kotlinx.coroutines.CoroutineScope origin=null
                        descriptor: GET_OBJECT 'CLASS GENERATED[kotlinx.rpc.codegen.FirRpcServiceStubCompanionObject] OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlinx.rpc.descriptor.RpcServiceDescriptor<<root>.BoxService>]' type=<root>.BoxService.$rpcServiceStub.Companion
                        fieldName: CONST String type=kotlin.String value="sharedFlow"
                        serviceId: CALL 'private final fun <get-__rpc_stub_id> (): kotlin.Long declared in <root>.BoxService.$rpcServiceStub' type=kotlin.Long origin=GET_PROPERTY
                          $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=<root>.BoxService.$rpcServiceStub origin=null
        FUN DELEGATED_PROPERTY_ACCESSOR name:<get-sharedFlow> visibility:public modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub) returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String>
          correspondingProperty: PROPERTY name:sharedFlow visibility:public modality:FINAL [delegated,val]
          overridden:
            public abstract fun <get-sharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.BoxService
          $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-sharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub'
              CALL 'public final fun getValue <T> (thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T of kotlin.getValue declared in kotlin' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
                <T>: kotlinx.coroutines.flow.SharedFlow<kotlin.String>
                $receiver: GET_FIELD 'FIELD PROPERTY_DELEGATE name:sharedFlow$delegate type:kotlin.Lazy<kotlinx.coroutines.flow.SharedFlow<kotlin.String>> visibility:private [final] declared in <root>.BoxService.$rpcServiceStub' type=kotlin.Lazy<kotlinx.coroutines.flow.SharedFlow<kotlin.String>> origin=null
                  receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub.<get-sharedFlow>' type=<root>.BoxService.$rpcServiceStub origin=null
                thisRef: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub.<get-sharedFlow>' type=<root>.BoxService.$rpcServiceStub origin=null
                property: PROPERTY_REFERENCE 'public final sharedFlow: kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub' field=null getter='public final fun <get-sharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub' setter=null type=kotlin.reflect.KProperty1<<root>.BoxService.$rpcServiceStub, kotlinx.coroutines.flow.SharedFlow<kotlin.String>> origin=PROPERTY_REFERENCE_FOR_DELEGATE
      PROPERTY name:stateFlow visibility:public modality:FINAL [delegated,val]
        overridden:
          public abstract stateFlow: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.BoxService
        FIELD PROPERTY_DELEGATE name:stateFlow$delegate type:kotlin.Lazy<kotlinx.coroutines.flow.StateFlow<kotlin.String>> visibility:private [final]
          EXPRESSION_BODY
            CALL 'public final fun lazy <T> (initializer: kotlin.Function0<T of kotlin.lazy>): kotlin.Lazy<T of kotlin.lazy> declared in kotlin' type=kotlin.Lazy<kotlinx.coroutines.flow.StateFlow<kotlin.String>> origin=null
              <T>: kotlinx.coroutines.flow.StateFlow<kotlin.String>
              initializer: FUN_EXPR type=kotlin.Function0<kotlinx.coroutines.flow.StateFlow<kotlin.String>> origin=LAMBDA
                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from='local final fun <anonymous> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub.stateFlow$delegate'
                      CALL 'public final fun registerStateFlowField <T> (serviceScope: kotlinx.coroutines.CoroutineScope, descriptor: kotlinx.rpc.descriptor.RpcServiceDescriptor<*>, fieldName: kotlin.String, serviceId: kotlin.Long): kotlinx.coroutines.flow.StateFlow<T of kotlinx.rpc.registerStateFlowField> declared in kotlinx.rpc' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
                        <T>: kotlin.String
                        $receiver: CALL 'private final fun <get-__rpc_client> (): kotlinx.rpc.RpcClient declared in <root>.BoxService.$rpcServiceStub' type=kotlinx.rpc.RpcClient origin=GET_PROPERTY
                          $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=<root>.BoxService.$rpcServiceStub origin=null
                        serviceScope: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=kotlinx.coroutines.CoroutineScope origin=null
                        descriptor: GET_OBJECT 'CLASS GENERATED[kotlinx.rpc.codegen.FirRpcServiceStubCompanionObject] OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlinx.rpc.descriptor.RpcServiceDescriptor<<root>.BoxService>]' type=<root>.BoxService.$rpcServiceStub.Companion
                        fieldName: CONST String type=kotlin.String value="stateFlow"
                        serviceId: CALL 'private final fun <get-__rpc_stub_id> (): kotlin.Long declared in <root>.BoxService.$rpcServiceStub' type=kotlin.Long origin=GET_PROPERTY
                          $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub' type=<root>.BoxService.$rpcServiceStub origin=null
        FUN DELEGATED_PROPERTY_ACCESSOR name:<get-stateFlow> visibility:public modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub) returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
          correspondingProperty: PROPERTY name:stateFlow visibility:public modality:FINAL [delegated,val]
          overridden:
            public abstract fun <get-stateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.BoxService
          $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-stateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub'
              CALL 'public final fun getValue <T> (thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T of kotlin.getValue declared in kotlin' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
                <T>: kotlinx.coroutines.flow.StateFlow<kotlin.String>
                $receiver: GET_FIELD 'FIELD PROPERTY_DELEGATE name:stateFlow$delegate type:kotlin.Lazy<kotlinx.coroutines.flow.StateFlow<kotlin.String>> visibility:private [final] declared in <root>.BoxService.$rpcServiceStub' type=kotlin.Lazy<kotlinx.coroutines.flow.StateFlow<kotlin.String>> origin=null
                  receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub.<get-stateFlow>' type=<root>.BoxService.$rpcServiceStub origin=null
                thisRef: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub declared in <root>.BoxService.$rpcServiceStub.<get-stateFlow>' type=<root>.BoxService.$rpcServiceStub origin=null
                property: PROPERTY_REFERENCE 'public final stateFlow: kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub' field=null getter='public final fun <get-stateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.BoxService.$rpcServiceStub' setter=null type=kotlin.reflect.KProperty1<<root>.BoxService.$rpcServiceStub, kotlinx.coroutines.flow.StateFlow<kotlin.String>> origin=PROPERTY_REFERENCE_FOR_DELEGATE
      CLASS GENERATED[kotlinx.rpc.codegen.FirRpcServiceStubCompanionObject] OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlinx.rpc.descriptor.RpcServiceDescriptor<<root>.BoxService>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.BoxService.$rpcServiceStub.Companion
        PROPERTY name:fqName visibility:public modality:FINAL [val]
          overridden:
            public abstract fqName: kotlin.String declared in kotlinx.rpc.descriptor.RpcServiceDescriptor
          FIELD PROPERTY_BACKING_FIELD name:fqName type:kotlin.String visibility:private [final]
            EXPRESSION_BODY
              CONST String type=kotlin.String value="BoxService"
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-fqName> visibility:public modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub.Companion) returnType:kotlin.String
            correspondingProperty: PROPERTY name:fqName visibility:public modality:FINAL [val]
            overridden:
              public abstract fun <get-fqName> (): kotlin.String declared in kotlinx.rpc.descriptor.RpcServiceDescriptor
            $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub.Companion
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='public final fun <get-fqName> (): kotlin.String declared in <root>.BoxService.$rpcServiceStub.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:fqName type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                  receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub.Companion declared in <root>.BoxService.$rpcServiceStub.Companion.<get-fqName>' type=<root>.BoxService.$rpcServiceStub.Companion origin=null
        PROPERTY name:plainFlowInvokator visibility:private modality:FINAL [val]
          FIELD PROPERTY_BACKING_FIELD name:plainFlowInvokator type:kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> visibility:private [final]
            EXPRESSION_BODY
              TYPE_OP type=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> origin=SAM_CONVERSION typeOperand=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService>
                FUN_EXPR type=kotlin.Function1<<root>.BoxService, kotlin.Any?> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (service:<root>.BoxService) returnType:kotlin.Any?
                    VALUE_PARAMETER name:service index:0 type:<root>.BoxService
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='local final fun <anonymous> (service: <root>.BoxService): kotlin.Any? declared in <root>.BoxService.$rpcServiceStub.Companion.plainFlowInvokator'
                        CALL 'public abstract fun <get-plainFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.BoxService' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
                          $this: GET_VAR 'service: <root>.BoxService declared in <root>.BoxService.$rpcServiceStub.Companion.plainFlowInvokator.<anonymous>' type=<root>.BoxService origin=null
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-plainFlowInvokator> visibility:private modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub.Companion) returnType:kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService>
            correspondingProperty: PROPERTY name:plainFlowInvokator visibility:private modality:FINAL [val]
            $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub.Companion
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='private final fun <get-plainFlowInvokator> (): kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> declared in <root>.BoxService.$rpcServiceStub.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:plainFlowInvokator type:kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> visibility:private [final]' type=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> origin=null
                  receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub.Companion declared in <root>.BoxService.$rpcServiceStub.Companion.<get-plainFlowInvokator>' type=<root>.BoxService.$rpcServiceStub.Companion origin=null
        PROPERTY name:sharedFlowInvokator visibility:private modality:FINAL [val]
          FIELD PROPERTY_BACKING_FIELD name:sharedFlowInvokator type:kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> visibility:private [final]
            EXPRESSION_BODY
              TYPE_OP type=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> origin=SAM_CONVERSION typeOperand=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService>
                FUN_EXPR type=kotlin.Function1<<root>.BoxService, kotlin.Any?> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (service:<root>.BoxService) returnType:kotlin.Any?
                    VALUE_PARAMETER name:service index:0 type:<root>.BoxService
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='local final fun <anonymous> (service: <root>.BoxService): kotlin.Any? declared in <root>.BoxService.$rpcServiceStub.Companion.sharedFlowInvokator'
                        CALL 'public abstract fun <get-sharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.BoxService' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=null
                          $this: GET_VAR 'service: <root>.BoxService declared in <root>.BoxService.$rpcServiceStub.Companion.sharedFlowInvokator.<anonymous>' type=<root>.BoxService origin=null
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-sharedFlowInvokator> visibility:private modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub.Companion) returnType:kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService>
            correspondingProperty: PROPERTY name:sharedFlowInvokator visibility:private modality:FINAL [val]
            $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub.Companion
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='private final fun <get-sharedFlowInvokator> (): kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> declared in <root>.BoxService.$rpcServiceStub.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:sharedFlowInvokator type:kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> visibility:private [final]' type=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> origin=null
                  receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub.Companion declared in <root>.BoxService.$rpcServiceStub.Companion.<get-sharedFlowInvokator>' type=<root>.BoxService.$rpcServiceStub.Companion origin=null
        PROPERTY name:stateFlowInvokator visibility:private modality:FINAL [val]
          FIELD PROPERTY_BACKING_FIELD name:stateFlowInvokator type:kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> visibility:private [final]
            EXPRESSION_BODY
              TYPE_OP type=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> origin=SAM_CONVERSION typeOperand=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService>
                FUN_EXPR type=kotlin.Function1<<root>.BoxService, kotlin.Any?> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (service:<root>.BoxService) returnType:kotlin.Any?
                    VALUE_PARAMETER name:service index:0 type:<root>.BoxService
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='local final fun <anonymous> (service: <root>.BoxService): kotlin.Any? declared in <root>.BoxService.$rpcServiceStub.Companion.stateFlowInvokator'
                        CALL 'public abstract fun <get-stateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.BoxService' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=null
                          $this: GET_VAR 'service: <root>.BoxService declared in <root>.BoxService.$rpcServiceStub.Companion.stateFlowInvokator.<anonymous>' type=<root>.BoxService origin=null
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-stateFlowInvokator> visibility:private modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub.Companion) returnType:kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService>
            correspondingProperty: PROPERTY name:stateFlowInvokator visibility:private modality:FINAL [val]
            $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub.Companion
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='private final fun <get-stateFlowInvokator> (): kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> declared in <root>.BoxService.$rpcServiceStub.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:stateFlowInvokator type:kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> visibility:private [final]' type=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> origin=null
                  receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub.Companion declared in <root>.BoxService.$rpcServiceStub.Companion.<get-stateFlowInvokator>' type=<root>.BoxService.$rpcServiceStub.Companion origin=null
        PROPERTY name:callableMap visibility:private modality:FINAL [val]
          FIELD PROPERTY_BACKING_FIELD name:callableMap type:kotlin.collections.Map<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> visibility:private [final]
            EXPRESSION_BODY
              CALL 'public final fun mapOf <K, V> (vararg pairs: kotlin.Pair<K of kotlin.collections.mapOf, V of kotlin.collections.mapOf>): kotlin.collections.Map<K of kotlin.collections.mapOf, V of kotlin.collections.mapOf> declared in kotlin.collections' type=kotlin.collections.Map<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> origin=null
                <K>: kotlin.String
                <V>: kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>
                pairs: VARARG type=kotlin.Array<out kotlin.Pair<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>>> varargElementType=kotlin.Pair<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>>
                  CALL 'public final fun to <A, B> (that: B of kotlin.to): kotlin.Pair<A of kotlin.to, B of kotlin.to> declared in kotlin' type=kotlin.Pair<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> origin=null
                    <A>: kotlin.String
                    <B>: kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>
                    $receiver: CONST String type=kotlin.String value="plainFlow"
                    that: CONSTRUCTOR_CALL 'public constructor <init> (name: kotlin.String, dataType: kotlin.reflect.KType, returnType: kotlin.reflect.KType, invokator: kotlinx.rpc.descriptor.RpcInvokator<T of kotlinx.rpc.descriptor.RpcCallable>, parameters: kotlin.Array<kotlinx.rpc.descriptor.RpcParameter>) declared in kotlinx.rpc.descriptor.RpcCallable' type=kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService> origin=null
                      <T>: <root>.BoxService
                      name: CONST String type=kotlin.String value="plainFlow"
                      dataType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType declared in kotlin.reflect' type=kotlin.reflect.KType origin=null
                        <T>: kotlinx.rpc.internal.FieldDataObject
                      returnType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType declared in kotlin.reflect' type=kotlin.reflect.KType origin=null
                        <T>: kotlinx.coroutines.flow.Flow<kotlin.String>
                      invokator: CALL 'private final fun <get-plainFlowInvokator> (): kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> declared in <root>.BoxService.$rpcServiceStub.Companion' type=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> origin=GET_PROPERTY
                        $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub.Companion declared in <root>.BoxService.$rpcServiceStub.Companion' type=<root>.BoxService.$rpcServiceStub.Companion origin=null
                      parameters: CALL 'public final fun emptyArray <T> (): kotlin.Array<T of kotlin.emptyArray> declared in kotlin' type=kotlin.Array<out kotlinx.rpc.descriptor.RpcParameter> origin=null
                        <T>: kotlinx.rpc.descriptor.RpcParameter
                  CALL 'public final fun to <A, B> (that: B of kotlin.to): kotlin.Pair<A of kotlin.to, B of kotlin.to> declared in kotlin' type=kotlin.Pair<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> origin=null
                    <A>: kotlin.String
                    <B>: kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>
                    $receiver: CONST String type=kotlin.String value="sharedFlow"
                    that: CONSTRUCTOR_CALL 'public constructor <init> (name: kotlin.String, dataType: kotlin.reflect.KType, returnType: kotlin.reflect.KType, invokator: kotlinx.rpc.descriptor.RpcInvokator<T of kotlinx.rpc.descriptor.RpcCallable>, parameters: kotlin.Array<kotlinx.rpc.descriptor.RpcParameter>) declared in kotlinx.rpc.descriptor.RpcCallable' type=kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService> origin=null
                      <T>: <root>.BoxService
                      name: CONST String type=kotlin.String value="sharedFlow"
                      dataType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType declared in kotlin.reflect' type=kotlin.reflect.KType origin=null
                        <T>: kotlinx.rpc.internal.FieldDataObject
                      returnType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType declared in kotlin.reflect' type=kotlin.reflect.KType origin=null
                        <T>: kotlinx.coroutines.flow.SharedFlow<kotlin.String>
                      invokator: CALL 'private final fun <get-sharedFlowInvokator> (): kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> declared in <root>.BoxService.$rpcServiceStub.Companion' type=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> origin=GET_PROPERTY
                        $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub.Companion declared in <root>.BoxService.$rpcServiceStub.Companion' type=<root>.BoxService.$rpcServiceStub.Companion origin=null
                      parameters: CALL 'public final fun emptyArray <T> (): kotlin.Array<T of kotlin.emptyArray> declared in kotlin' type=kotlin.Array<out kotlinx.rpc.descriptor.RpcParameter> origin=null
                        <T>: kotlinx.rpc.descriptor.RpcParameter
                  CALL 'public final fun to <A, B> (that: B of kotlin.to): kotlin.Pair<A of kotlin.to, B of kotlin.to> declared in kotlin' type=kotlin.Pair<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> origin=null
                    <A>: kotlin.String
                    <B>: kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>
                    $receiver: CONST String type=kotlin.String value="stateFlow"
                    that: CONSTRUCTOR_CALL 'public constructor <init> (name: kotlin.String, dataType: kotlin.reflect.KType, returnType: kotlin.reflect.KType, invokator: kotlinx.rpc.descriptor.RpcInvokator<T of kotlinx.rpc.descriptor.RpcCallable>, parameters: kotlin.Array<kotlinx.rpc.descriptor.RpcParameter>) declared in kotlinx.rpc.descriptor.RpcCallable' type=kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService> origin=null
                      <T>: <root>.BoxService
                      name: CONST String type=kotlin.String value="stateFlow"
                      dataType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType declared in kotlin.reflect' type=kotlin.reflect.KType origin=null
                        <T>: kotlinx.rpc.internal.FieldDataObject
                      returnType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType declared in kotlin.reflect' type=kotlin.reflect.KType origin=null
                        <T>: kotlinx.coroutines.flow.StateFlow<kotlin.String>
                      invokator: CALL 'private final fun <get-stateFlowInvokator> (): kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> declared in <root>.BoxService.$rpcServiceStub.Companion' type=kotlinx.rpc.descriptor.RpcInvokator.Field<<root>.BoxService> origin=GET_PROPERTY
                        $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub.Companion declared in <root>.BoxService.$rpcServiceStub.Companion' type=<root>.BoxService.$rpcServiceStub.Companion origin=null
                      parameters: CALL 'public final fun emptyArray <T> (): kotlin.Array<T of kotlin.emptyArray> declared in kotlin' type=kotlin.Array<out kotlinx.rpc.descriptor.RpcParameter> origin=null
                        <T>: kotlinx.rpc.descriptor.RpcParameter
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-callableMap> visibility:private modality:FINAL <> ($this:<root>.BoxService.$rpcServiceStub.Companion) returnType:kotlin.collections.Map<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>>
            correspondingProperty: PROPERTY name:callableMap visibility:private modality:FINAL [val]
            $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub.Companion
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='private final fun <get-callableMap> (): kotlin.collections.Map<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> declared in <root>.BoxService.$rpcServiceStub.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:callableMap type:kotlin.collections.Map<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> visibility:private [final]' type=kotlin.collections.Map<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> origin=null
                  receiver: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub.Companion declared in <root>.BoxService.$rpcServiceStub.Companion.<get-callableMap>' type=<root>.BoxService.$rpcServiceStub.Companion origin=null
        CONSTRUCTOR visibility:private <> () returnType:<root>.BoxService.$rpcServiceStub.Companion [primary]
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
            INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[kotlinx.rpc.codegen.FirRpcServiceStubCompanionObject] OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlinx.rpc.descriptor.RpcServiceDescriptor<<root>.BoxService>]'
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlinx.rpc.descriptor.RpcServiceDescriptor
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int declared in kotlinx.rpc.descriptor.RpcServiceDescriptor
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String declared in kotlinx.rpc.descriptor.RpcServiceDescriptor
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN name:createInstance visibility:public modality:OPEN <> ($this:<root>.BoxService.$rpcServiceStub.Companion, serviceId:kotlin.Long, client:kotlinx.rpc.RpcClient) returnType:<root>.BoxService
          overridden:
            public abstract fun createInstance (serviceId: kotlin.Long, client: kotlinx.rpc.RpcClient): T of kotlinx.rpc.descriptor.RpcServiceDescriptor declared in kotlinx.rpc.descriptor.RpcServiceDescriptor
          $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub.Companion
          VALUE_PARAMETER name:serviceId index:0 type:kotlin.Long
          VALUE_PARAMETER name:client index:1 type:kotlinx.rpc.RpcClient
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public open fun createInstance (serviceId: kotlin.Long, client: kotlinx.rpc.RpcClient): <root>.BoxService declared in <root>.BoxService.$rpcServiceStub.Companion'
              CONSTRUCTOR_CALL 'public constructor <init> (__rpc_stub_id: kotlin.Long, __rpc_client: kotlinx.rpc.RpcClient) declared in <root>.BoxService.$rpcServiceStub' type=<root>.BoxService.$rpcServiceStub origin=null
                __rpc_stub_id: GET_VAR 'serviceId: kotlin.Long declared in <root>.BoxService.$rpcServiceStub.Companion.createInstance' type=kotlin.Long origin=null
                __rpc_client: GET_VAR 'client: kotlinx.rpc.RpcClient declared in <root>.BoxService.$rpcServiceStub.Companion.createInstance' type=kotlinx.rpc.RpcClient origin=null
        FUN name:getCallable visibility:public modality:OPEN <> ($this:<root>.BoxService.$rpcServiceStub.Companion, name:kotlin.String) returnType:kotlinx.rpc.descriptor.RpcCallable?
          overridden:
            public abstract fun getCallable (name: kotlin.String): kotlinx.rpc.descriptor.RpcCallable<T of kotlinx.rpc.descriptor.RpcServiceDescriptor>? declared in kotlinx.rpc.descriptor.RpcServiceDescriptor
          $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub.Companion
          VALUE_PARAMETER name:name index:0 type:kotlin.String
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public open fun getCallable (name: kotlin.String): kotlinx.rpc.descriptor.RpcCallable? declared in <root>.BoxService.$rpcServiceStub.Companion'
              CALL 'public abstract fun get (key: K of kotlin.collections.Map): V of kotlin.collections.Map? declared in kotlin.collections.Map' type=kotlinx.rpc.descriptor.RpcCallable? origin=GET_ARRAY_ELEMENT
                $this: CALL 'private final fun <get-callableMap> (): kotlin.collections.Map<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> declared in <root>.BoxService.$rpcServiceStub.Companion' type=kotlin.collections.Map<kotlin.String, kotlinx.rpc.descriptor.RpcCallable<<root>.BoxService>> origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.BoxService.$rpcServiceStub.Companion declared in <root>.BoxService.$rpcServiceStub.Companion.getCallable' type=<root>.BoxService.$rpcServiceStub.Companion origin=null
                key: GET_VAR 'name: kotlin.String declared in <root>.BoxService.$rpcServiceStub.Companion.getCallable' type=kotlin.String origin=null
        FUN name:getFields visibility:public modality:OPEN <> ($this:<root>.BoxService.$rpcServiceStub.Companion, service:<root>.BoxService) returnType:kotlin.collections.List<kotlinx.rpc.internal.RpcDeferredField<*>>
          overridden:
            public abstract fun getFields (service: T of kotlinx.rpc.descriptor.RpcServiceDescriptor): kotlin.collections.List<kotlinx.rpc.internal.RpcDeferredField<*>> declared in kotlinx.rpc.descriptor.RpcServiceDescriptor
          $this: VALUE_PARAMETER name:<this> type:<root>.BoxService.$rpcServiceStub.Companion
          VALUE_PARAMETER name:service index:0 type:<root>.BoxService
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public open fun getFields (service: <root>.BoxService): kotlin.collections.List<kotlinx.rpc.internal.RpcDeferredField<*>> declared in <root>.BoxService.$rpcServiceStub.Companion'
              TYPE_OP type=kotlin.collections.List<kotlinx.rpc.internal.RpcDeferredField<*>> origin=CAST typeOperand=kotlin.collections.List<kotlinx.rpc.internal.RpcDeferredField<*>>
                CALL 'public final fun listOf <T> (vararg elements: T of kotlin.collections.listOf): kotlin.collections.List<T of kotlin.collections.listOf> declared in kotlin.collections' type=kotlin.collections.List<kotlin.Any?> origin=null
                  <T>: kotlin.Any?
                  elements: VARARG type=kotlin.Array<out kotlin.Any?> varargElementType=kotlin.Any?
                    CALL 'public abstract fun <get-plainFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.BoxService' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=GET_PROPERTY
                      $this: GET_VAR 'service: <root>.BoxService declared in <root>.BoxService.$rpcServiceStub.Companion.getFields' type=<root>.BoxService origin=null
                    CALL 'public abstract fun <get-sharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.BoxService' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=GET_PROPERTY
                      $this: GET_VAR 'service: <root>.BoxService declared in <root>.BoxService.$rpcServiceStub.Companion.getFields' type=<root>.BoxService origin=null
                    CALL 'public abstract fun <get-stateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.BoxService' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=GET_PROPERTY
                      $this: GET_VAR 'service: <root>.BoxService declared in <root>.BoxService.$rpcServiceStub.Companion.getFields' type=<root>.BoxService origin=null
      CONSTRUCTOR visibility:public <> (__rpc_stub_id:kotlin.Long, __rpc_client:kotlinx.rpc.RpcClient) returnType:<root>.BoxService.$rpcServiceStub [primary]
        VALUE_PARAMETER name:__rpc_stub_id index:0 type:kotlin.Long
        VALUE_PARAMETER name:__rpc_client index:1 type:kotlinx.rpc.RpcClient
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[kotlinx.rpc.codegen.RPCGeneratedStubKey] CLASS name:$rpcServiceStub modality:FINAL visibility:public superTypes:[<root>.BoxService]'
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.BoxService
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int declared in <root>.BoxService
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String declared in <root>.BoxService
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlinx.rpc.RemoteService
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlinx.rpc.RemoteService
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlinx.rpc.RemoteService
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    PROPERTY FAKE_OVERRIDE name:coroutineContext visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract coroutineContext: kotlin.coroutines.CoroutineContext declared in kotlinx.rpc.RemoteService
      FUN FAKE_OVERRIDE name:<get-coroutineContext> visibility:public modality:ABSTRACT <> ($this:kotlinx.rpc.RemoteService) returnType:kotlin.coroutines.CoroutineContext [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:coroutineContext visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-coroutineContext> (): kotlin.coroutines.CoroutineContext declared in kotlinx.rpc.RemoteService
        $this: VALUE_PARAMETER name:<this> type:kotlinx.rpc.RemoteService
    PROPERTY name:plainFlow visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-plainFlow> visibility:public modality:ABSTRACT <> ($this:<root>.BoxService) returnType:kotlinx.coroutines.flow.Flow<kotlin.String>
        correspondingProperty: PROPERTY name:plainFlow visibility:public modality:ABSTRACT [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.BoxService
    PROPERTY name:sharedFlow visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-sharedFlow> visibility:public modality:ABSTRACT <> ($this:<root>.BoxService) returnType:kotlinx.coroutines.flow.SharedFlow<kotlin.String>
        correspondingProperty: PROPERTY name:sharedFlow visibility:public modality:ABSTRACT [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.BoxService
    PROPERTY name:stateFlow visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-stateFlow> visibility:public modality:ABSTRACT <> ($this:<root>.BoxService) returnType:kotlinx.coroutines.flow.StateFlow<kotlin.String>
        correspondingProperty: PROPERTY name:stateFlow visibility:public modality:ABSTRACT [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.BoxService
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CALL 'public final fun runBlocking <T> (context: kotlin.coroutines.CoroutineContext, block: @[ExtensionFunctionType] kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope, T of kotlinx.coroutines.runBlocking>): T of kotlinx.coroutines.runBlocking declared in kotlinx.coroutines' type=kotlin.String origin=null
          <T>: kotlin.String
          block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope, kotlin.String> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:kotlinx.coroutines.CoroutineScope) returnType:kotlin.String [suspend]
              $receiver: VALUE_PARAMETER name:$this$runBlocking type:kotlinx.coroutines.CoroutineScope
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (): kotlin.String declared in <root>.box'
                  BLOCK type=kotlin.String origin=ELVIS
                    VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlin.String? [val]
                      CALL 'public final fun withTimeoutOrNull <T> (timeMillis: kotlin.Long, block: @[ExtensionFunctionType] kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope, T of kotlinx.coroutines.withTimeoutOrNull>): T of kotlinx.coroutines.withTimeoutOrNull? declared in kotlinx.coroutines' type=kotlin.String? origin=null
                        <T>: kotlin.String
                        timeMillis: CONST Long type=kotlin.Long value=1000
                        block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope, kotlin.String> origin=LAMBDA
                          FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:kotlinx.coroutines.CoroutineScope) returnType:kotlin.String [suspend]
                            $receiver: VALUE_PARAMETER name:$this$withTimeoutOrNull type:kotlinx.coroutines.CoroutineScope
                            BLOCK_BODY
                              VAR name:plainFlow type:kotlin.collections.List<kotlin.String> [val]
                                CALL 'public final fun toList <T> (destination: kotlin.collections.MutableList<T of kotlinx.coroutines.flow.toList>): kotlin.collections.List<T of kotlinx.coroutines.flow.toList> declared in kotlinx.coroutines.flow' type=kotlin.collections.List<kotlin.String> origin=null
                                  <T>: kotlin.String
                                  $receiver: CALL 'public abstract fun <get-plainFlow> (): kotlinx.coroutines.flow.Flow<kotlin.String> declared in <root>.BoxService' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=GET_PROPERTY
                                    $this: CALL 'public final fun withService <T> (): T of kotlinx.rpc.withService declared in kotlinx.rpc' type=<root>.BoxService origin=null
                                      <T>: <root>.BoxService
                                      $receiver: GET_OBJECT 'CLASS OBJECT name:TestRpcClient modality:FINAL visibility:public superTypes:[kotlinx.rpc.RpcClient]' type=kotlinx.rpc.codegen.test.TestRpcClient
                              VAR name:sharedFlow type:kotlin.collections.List<kotlin.String> [val]
                                CALL 'public final fun toList <T> (destination: kotlin.collections.MutableList<T of kotlinx.coroutines.flow.toList>): kotlin.collections.List<T of kotlinx.coroutines.flow.toList> declared in kotlinx.coroutines.flow' type=kotlin.collections.List<kotlin.String> origin=null
                                  <T>: kotlin.String
                                  $receiver: CALL 'public final fun take <T> (count: kotlin.Int): kotlinx.coroutines.flow.Flow<T of kotlinx.coroutines.flow.take> declared in kotlinx.coroutines.flow' type=kotlinx.coroutines.flow.Flow<kotlin.String> origin=null
                                    <T>: kotlin.String
                                    $receiver: CALL 'public abstract fun <get-sharedFlow> (): kotlinx.coroutines.flow.SharedFlow<kotlin.String> declared in <root>.BoxService' type=kotlinx.coroutines.flow.SharedFlow<kotlin.String> origin=GET_PROPERTY
                                      $this: CALL 'public final fun withService <T> (): T of kotlinx.rpc.withService declared in kotlinx.rpc' type=<root>.BoxService origin=null
                                        <T>: <root>.BoxService
                                        $receiver: GET_OBJECT 'CLASS OBJECT name:TestRpcClient modality:FINAL visibility:public superTypes:[kotlinx.rpc.RpcClient]' type=kotlinx.rpc.codegen.test.TestRpcClient
                                    count: CONST Int type=kotlin.Int value=1
                              VAR name:stateFlow type:kotlin.String [val]
                                CALL 'public abstract fun <get-value> (): T of kotlinx.coroutines.flow.StateFlow declared in kotlinx.coroutines.flow.StateFlow' type=kotlin.String origin=GET_PROPERTY
                                  $this: CALL 'public abstract fun <get-stateFlow> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in <root>.BoxService' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=GET_PROPERTY
                                    $this: CALL 'public final fun withService <T> (): T of kotlinx.rpc.withService declared in kotlinx.rpc' type=<root>.BoxService origin=null
                                      <T>: <root>.BoxService
                                      $receiver: GET_OBJECT 'CLASS OBJECT name:TestRpcClient modality:FINAL visibility:public superTypes:[kotlinx.rpc.RpcClient]' type=kotlinx.rpc.codegen.test.TestRpcClient
                              VAR name:failures type:kotlin.collections.MutableList<kotlin.String> [val]
                                CALL 'public final fun mutableListOf <T> (): kotlin.collections.MutableList<T of kotlin.collections.mutableListOf> declared in kotlin.collections' type=kotlin.collections.MutableList<kotlin.String> origin=null
                                  <T>: kotlin.String
                              WHEN type=kotlin.Unit origin=IF
                                BRANCH
                                  if: WHEN type=kotlin.Boolean origin=OROR
                                    BRANCH
                                      if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                                        $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                                          arg0: CALL 'public abstract fun <get-size> (): kotlin.Int declared in kotlin.collections.List' type=kotlin.Int origin=GET_PROPERTY
                                            $this: GET_VAR 'val plainFlow: kotlin.collections.List<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.List<kotlin.String> origin=null
                                          arg1: CONST Int type=kotlin.Int value=1
                                      then: CONST Boolean type=kotlin.Boolean value=true
                                    BRANCH
                                      if: CONST Boolean type=kotlin.Boolean value=true
                                      then: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                                        $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                                          arg0: CALL 'public abstract fun get (index: kotlin.Int): E of kotlin.collections.List declared in kotlin.collections.List' type=kotlin.String origin=GET_ARRAY_ELEMENT
                                            $this: GET_VAR 'val plainFlow: kotlin.collections.List<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.List<kotlin.String> origin=null
                                            index: CONST Int type=kotlin.Int value=0
                                          arg1: CONST String type=kotlin.String value="registerPlainFlowField_42"
                                  then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                    BLOCK type=kotlin.Boolean origin=null
                                      CALL 'public abstract fun add (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList' type=kotlin.Boolean origin=null
                                        $this: GET_VAR 'val failures: kotlin.collections.MutableList<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.MutableList<kotlin.String> origin=null
                                        element: CALL 'public final fun plus (other: kotlin.Any?): kotlin.String declared in kotlin.String' type=kotlin.String origin=PLUS
                                          $this: STRING_CONCATENATION type=kotlin.String
                                            CONST String type=kotlin.String value="plainFlow.size = "
                                            CALL 'public abstract fun <get-size> (): kotlin.Int declared in kotlin.collections.List' type=kotlin.Int origin=GET_PROPERTY
                                              $this: GET_VAR 'val plainFlow: kotlin.collections.List<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.List<kotlin.String> origin=null
                                            CONST String type=kotlin.String value=" (expected 1), "
                                          other: STRING_CONCATENATION type=kotlin.String
                                            CONST String type=kotlin.String value="plainFlow[0] = \""
                                            CALL 'public final fun getOrNull <T> (index: kotlin.Int): T of kotlin.collections.getOrNull? declared in kotlin.collections' type=kotlin.String? origin=null
                                              <T>: kotlin.String
                                              $receiver: GET_VAR 'val plainFlow: kotlin.collections.List<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.List<kotlin.String> origin=null
                                              index: CONST Int type=kotlin.Int value=0
                                            CONST String type=kotlin.String value="\" (expected \"registerPlainFlowField_42\")"
                              WHEN type=kotlin.Unit origin=IF
                                BRANCH
                                  if: WHEN type=kotlin.Boolean origin=OROR
                                    BRANCH
                                      if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                                        $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                                          arg0: CALL 'public abstract fun <get-size> (): kotlin.Int declared in kotlin.collections.List' type=kotlin.Int origin=GET_PROPERTY
                                            $this: GET_VAR 'val sharedFlow: kotlin.collections.List<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.List<kotlin.String> origin=null
                                          arg1: CONST Int type=kotlin.Int value=1
                                      then: CONST Boolean type=kotlin.Boolean value=true
                                    BRANCH
                                      if: CONST Boolean type=kotlin.Boolean value=true
                                      then: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                                        $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                                          arg0: CALL 'public abstract fun get (index: kotlin.Int): E of kotlin.collections.List declared in kotlin.collections.List' type=kotlin.String origin=GET_ARRAY_ELEMENT
                                            $this: GET_VAR 'val sharedFlow: kotlin.collections.List<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.List<kotlin.String> origin=null
                                            index: CONST Int type=kotlin.Int value=0
                                          arg1: CONST String type=kotlin.String value="registerSharedFlowField_42"
                                  then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                    BLOCK type=kotlin.Boolean origin=null
                                      CALL 'public abstract fun add (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList' type=kotlin.Boolean origin=null
                                        $this: GET_VAR 'val failures: kotlin.collections.MutableList<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.MutableList<kotlin.String> origin=null
                                        element: CALL 'public final fun plus (other: kotlin.Any?): kotlin.String declared in kotlin.String' type=kotlin.String origin=PLUS
                                          $this: STRING_CONCATENATION type=kotlin.String
                                            CONST String type=kotlin.String value="sharedFlow.size = "
                                            CALL 'public abstract fun <get-size> (): kotlin.Int declared in kotlin.collections.List' type=kotlin.Int origin=GET_PROPERTY
                                              $this: GET_VAR 'val sharedFlow: kotlin.collections.List<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.List<kotlin.String> origin=null
                                            CONST String type=kotlin.String value=" (expected 1), "
                                          other: STRING_CONCATENATION type=kotlin.String
                                            CONST String type=kotlin.String value="sharedFlow[0] = \""
                                            CALL 'public final fun getOrNull <T> (index: kotlin.Int): T of kotlin.collections.getOrNull? declared in kotlin.collections' type=kotlin.String? origin=null
                                              <T>: kotlin.String
                                              $receiver: GET_VAR 'val sharedFlow: kotlin.collections.List<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.List<kotlin.String> origin=null
                                              index: CONST Int type=kotlin.Int value=0
                                            CONST String type=kotlin.String value="\" (expected \"registerSharedFlowField_42\")"
                              WHEN type=kotlin.Unit origin=IF
                                BRANCH
                                  if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                                    $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                                      arg0: GET_VAR 'val stateFlow: kotlin.String declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.String origin=null
                                      arg1: CONST String type=kotlin.String value="registerStateFlowField_42"
                                  then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                    BLOCK type=kotlin.Boolean origin=null
                                      CALL 'public abstract fun add (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList' type=kotlin.Boolean origin=null
                                        $this: GET_VAR 'val failures: kotlin.collections.MutableList<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.MutableList<kotlin.String> origin=null
                                        element: STRING_CONCATENATION type=kotlin.String
                                          CONST String type=kotlin.String value="stateFlow = \""
                                          GET_VAR 'val stateFlow: kotlin.String declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.String origin=null
                                          CONST String type=kotlin.String value="\" (expected \"registerStateFlowField_42\")"
                              RETURN type=kotlin.Nothing from='local final fun <anonymous> (): kotlin.String declared in <root>.box.<anonymous>'
                                BLOCK type=kotlin.String origin=ELVIS
                                  VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:kotlin.String? [val]
                                    BLOCK type=kotlin.String? origin=SAFE_CALL
                                      VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:kotlin.String? [val]
                                        BLOCK type=kotlin.String? origin=SAFE_CALL
                                          VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:kotlin.collections.MutableList<kotlin.String>? [val]
                                            CALL 'public final fun takeIf <T> (predicate: kotlin.Function1<T of kotlin.takeIf, kotlin.Boolean>): T of kotlin.takeIf? declared in kotlin' type=kotlin.collections.MutableList<kotlin.String>? origin=null
                                              <T>: kotlin.collections.MutableList<kotlin.String>
                                              $receiver: GET_VAR 'val failures: kotlin.collections.MutableList<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.MutableList<kotlin.String> origin=null
                                              predicate: FUN_EXPR type=kotlin.Function1<kotlin.collections.MutableList<kotlin.String>, kotlin.Boolean> origin=LAMBDA
                                                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:kotlin.collections.MutableList<kotlin.String>) returnType:kotlin.Boolean
                                                  VALUE_PARAMETER name:it index:0 type:kotlin.collections.MutableList<kotlin.String>
                                                  BLOCK_BODY
                                                    RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.collections.MutableList<kotlin.String>): kotlin.Boolean declared in <root>.box.<anonymous>.<anonymous>'
                                                      CALL 'public final fun isNotEmpty <T> (): kotlin.Boolean declared in kotlin.collections' type=kotlin.Boolean origin=null
                                                        <T>: kotlin.String
                                                        $receiver: GET_VAR 'it: kotlin.collections.MutableList<kotlin.String> declared in <root>.box.<anonymous>.<anonymous>.<anonymous>' type=kotlin.collections.MutableList<kotlin.String> origin=null
                                          WHEN type=kotlin.String? origin=null
                                            BRANCH
                                              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                                                arg0: GET_VAR 'val tmp_3: kotlin.collections.MutableList<kotlin.String>? declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.MutableList<kotlin.String>? origin=null
                                                arg1: CONST Null type=kotlin.Nothing? value=null
                                              then: CONST Null type=kotlin.Nothing? value=null
                                            BRANCH
                                              if: CONST Boolean type=kotlin.Boolean value=true
                                              then: CALL 'public final fun joinToString <T> (separator: kotlin.CharSequence, prefix: kotlin.CharSequence, postfix: kotlin.CharSequence, limit: kotlin.Int, truncated: kotlin.CharSequence, transform: kotlin.Function1<T of kotlin.collections.joinToString, kotlin.CharSequence>?): kotlin.String declared in kotlin.collections' type=kotlin.String origin=null
                                                <T>: kotlin.String
                                                $receiver: GET_VAR 'val tmp_3: kotlin.collections.MutableList<kotlin.String>? declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.collections.MutableList<kotlin.String>? origin=null
                                                separator: CONST String type=kotlin.String value=";"
                                      WHEN type=kotlin.String? origin=null
                                        BRANCH
                                          if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                                            arg0: GET_VAR 'val tmp_2: kotlin.String? declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.String? origin=null
                                            arg1: CONST Null type=kotlin.Nothing? value=null
                                          then: CONST Null type=kotlin.Nothing? value=null
                                        BRANCH
                                          if: CONST Boolean type=kotlin.Boolean value=true
                                          then: CALL 'public final fun let <T, R> (block: kotlin.Function1<T of kotlin.let, R of kotlin.let>): R of kotlin.let declared in kotlin' type=kotlin.String origin=null
                                            <T>: kotlin.String
                                            <R>: kotlin.String
                                            $receiver: GET_VAR 'val tmp_2: kotlin.String? declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.String? origin=null
                                            block: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.String> origin=LAMBDA
                                              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:kotlin.String) returnType:kotlin.String
                                                VALUE_PARAMETER name:it index:0 type:kotlin.String
                                                BLOCK_BODY
                                                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.String): kotlin.String declared in <root>.box.<anonymous>.<anonymous>'
                                                    STRING_CONCATENATION type=kotlin.String
                                                      CONST String type=kotlin.String value="Fail: "
                                                      GET_VAR 'it: kotlin.String declared in <root>.box.<anonymous>.<anonymous>.<anonymous>' type=kotlin.String origin=null
                                  WHEN type=kotlin.String origin=null
                                    BRANCH
                                      if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                                        arg0: GET_VAR 'val tmp_1: kotlin.String? declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.String? origin=null
                                        arg1: CONST Null type=kotlin.Nothing? value=null
                                      then: CONST String type=kotlin.String value="OK"
                                    BRANCH
                                      if: CONST Boolean type=kotlin.Boolean value=true
                                      then: GET_VAR 'val tmp_1: kotlin.String? declared in <root>.box.<anonymous>.<anonymous>' type=kotlin.String? origin=null
                    WHEN type=kotlin.String origin=null
                      BRANCH
                        if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                          arg0: GET_VAR 'val tmp_0: kotlin.String? declared in <root>.box.<anonymous>' type=kotlin.String? origin=null
                          arg1: CONST Null type=kotlin.Nothing? value=null
                        then: CONST String type=kotlin.String value="Fail: test timed out"
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: GET_VAR 'val tmp_0: kotlin.String? declared in <root>.box.<anonymous>' type=kotlin.String? origin=null
